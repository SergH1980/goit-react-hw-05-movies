{"version":3,"file":"static/js/581.59e22491.chunk.js","mappings":"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","sources":["components/MovieMarkup/MovieMarkup.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// import PropTypes from 'prop-types';\n\nimport './MovieMarkup.css';\n\nexport default function MovieMarkup({ movie }) {\n  // console.log(movie);\n  const { title, vote_average, overview, genres, poster_path, release_date } =\n    movie;\n\n  const finaltitle = title ? `${title}` : `Undefined`;\n\n  const finalVote = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : `Undefined`;\n\n  const finalOverview = overview ? `${overview}` : `Not available yet`;\n\n  const finalPath = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : `http://randomchatter.com/wp-content/uploads/2017/01/400px-x-600px-r01BookNotPictured.jpg`;\n\n  const finalGenres = genres\n    ? genres.map(genre => genre.name).join(', ')\n    : `Nothing to show`;\n\n  const dateToSeconds = new Date(release_date);\n\n  const finalYear = isNaN(dateToSeconds)\n    ? `Unknown`\n    : dateToSeconds.getFullYear();\n\n  return (\n    <div className=\"movieMarkupWrap\">\n      <img src={finalPath} alt={finaltitle} />\n      <div>\n        <h2 className=\"movieTitle\">\n          {finaltitle}({finalYear})\n        </h2>\n        <p className=\"movieRating\">User Score: {finalVote} </p>\n        <div className=\"movieInfoWrap\">\n          <p className=\"movieInfoTitle\">Overview</p>\n          <p className=\"movieOverview\">{finalOverview}</p>\n        </div>\n        <div className=\"movieInfoWrap\">\n          <p className=\"movieInfoTitle\">Genres</p>\n          <p className=\"movieGenres\">{finalGenres}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// MovieMarkup.propTypes = {\n//   movie: PropTypes.shape({\n//     title: PropTypes.string.isRequired,\n//     vote_average: PropTypes.number.isRequired,\n//     overview: PropTypes.string.isRequired,\n//     poster_path: PropTypes.string,\n//     release_date: PropTypes.string.isRequired,\n//     id: PropTypes.number.isRequired,\n//     // genres: PropTypes.arrayOf(PropTypes.string.isRequired),\n//   }).isRequired,\n// };\n","import { Outlet, Link } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { apiMovieSearch } from 'services/api';\nimport { ProgressBar } from 'react-loader-spinner';\n\nimport MovieMarkup from 'components/MovieMarkup/MovieMarkup';\n\nexport default function MovieDetails() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieInfo, setMovieInfo] = useState({});\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkHref =\n    location.state.from === '' ? `/` : `/movies/${location.state.from}`;\n\n  useEffect(() => {\n    const findMovie = async () => {\n      try {\n        setIsLoading(true);\n        const result = await apiMovieSearch(movieId);\n        setMovieInfo(result);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <button>{<Link to={backLinkHref}>Go back</Link>}</button>\n\n      {isLoading ? <ProgressBar /> : <MovieMarkup movie={movieInfo} />}\n      <p>Additional information:</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: location.state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: location.state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `1a6be4acd703bdf91bdb7fd89ae97812`;\n\nexport const apiTrending = async () => {\n  const response = await axios.get(\n    `trending/movie/week?api_key=${API_KEY}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const apiQuerySearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const apiMovieSearch = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const apiActorsSearch = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const apiReviewsSearch = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["MovieMarkup","movie","title","vote_average","overview","genres","poster_path","release_date","finaltitle","finalVote","toFixed","finalOverview","finalPath","finalGenres","map","genre","name","join","dateToSeconds","Date","finalYear","isNaN","getFullYear","className","src","alt","MovieDetails","useState","isLoading","setIsLoading","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","backLinkHref","state","from","useEffect","findMovie","apiMovieSearch","result","console","log","to","Suspense","fallback","axios","API_KEY","apiTrending","response","data","apiQuerySearch","query","apiActorsSearch","apiReviewsSearch"],"sourceRoot":""}