{"version":3,"file":"static/js/474.0bc6bd9f.chunk.js","mappings":"gRAOe,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOG,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBN,GAAa,GAFG,UAGKO,EAAAA,EAAAA,IAAiBJ,GAHtB,OAGVK,EAHU,OAIhBN,EAAgBM,GAJA,gDAMhBC,QAAQC,IAAR,MANgB,yBAQhBV,GAAa,GARG,4EAAH,qDAWjBM,GACD,GAAE,CAACH,IAEJ,IAAMQ,EAAUV,EAAaW,QAC7B,OAAKD,EAGkB,IAAnBA,EAAQE,QACH,gBAAKC,UAAU,eAAf,mCAGP,yBACGf,GACC,SAAC,KAAD,KAEA,eAAIe,UAAU,aAAd,SACGH,EAAQI,KAAI,SAAAC,GACX,IAAMC,EAAoBD,EAAOE,OAAP,UACnBF,EAAOE,QADY,oBAIpBC,EAAkBH,EAAOI,QAAP,UACjBJ,EAAOI,SADU,oBAIxB,OACE,gBAAoBN,UAAU,aAA9B,WACE,cAAGA,UAAU,aAAb,SAA2BG,KAC3B,uBAAIE,MAFGH,EAAOK,GAKnB,SA1BA,uCA+BV,C,mMC3DDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAO,mCAEAC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCACUC,EADV,yBADE,cACnBE,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXC,EAAc,mCAAG,WAAMC,GAAN,uFACLN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,gCADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAc,mCAAG,WAAM1B,GAAN,uFACLmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCoB,IADjC,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdI,EAAe,mCAAG,WAAM3B,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,4BACgBoB,IAFV,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfnB,EAAgB,mCAAG,WAAMJ,GAAN,uFACPmB,EAAAA,EAAAA,IAAA,iBACXnB,EADW,4BACgBoB,IAFT,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiReviewsSearch } from 'services/api';\nimport { ProgressBar } from 'react-loader-spinner';\n\nimport './Reviews.css';\n\nexport default function Reviews() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [movieReviews, setMovieReviews] = useState({});\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const findReviews = async () => {\n      try {\n        setIsLoading(true);\n        const result = await apiReviewsSearch(movieId);\n        setMovieReviews(result);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findReviews();\n  }, [movieId]);\n\n  const reviews = movieReviews.results;\n  if (!reviews) {\n    return <div>No reviews</div>;\n  }\n  if (reviews.length === 0) {\n    return <div className=\"emptyReviews\">Nothing to show yet!</div>;\n  }\n  return (\n    <div>\n      {isLoading ? (\n        <ProgressBar />\n      ) : (\n        <ul className=\"reviewList\">\n          {reviews.map(review => {\n            const finalReviewAuthor = review.author\n              ? `${review.author}`\n              : `No data available`;\n\n            const finalReviewText = review.content\n              ? `${review.content}`\n              : `No data available`;\n\n            return (\n              <li key={review.id} className=\"reviewWrap\">\n                <p className=\"authorName\">{finalReviewAuthor}</p>\n                <p>{finalReviewText}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `1a6be4acd703bdf91bdb7fd89ae97812`;\n\nexport const apiTrending = async () => {\n  const response = await axios.get(\n    `trending/movie/week?api_key=${API_KEY}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const apiQuerySearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const apiMovieSearch = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const apiActorsSearch = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const apiReviewsSearch = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["Reviews","useState","isLoading","setIsLoading","movieReviews","setMovieReviews","movieId","useParams","useEffect","findReviews","apiReviewsSearch","result","console","log","reviews","results","length","className","map","review","finalReviewAuthor","author","finalReviewText","content","id","axios","API_KEY","apiTrending","response","data","apiQuerySearch","query","apiMovieSearch","apiActorsSearch"],"sourceRoot":""}