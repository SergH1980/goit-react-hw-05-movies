{"version":3,"file":"static/js/418.5c635eea.chunk.js","mappings":"gRAMe,SAASA,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,CAAC,GAA1C,eAAOG,EAAP,KAAiBC,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfN,GAAa,GAFE,UAGMO,EAAAA,EAAAA,IAAgBJ,GAHtB,OAGTK,EAHS,OAIfN,EAAYM,GAJG,gDAMfC,QAAQC,IAAR,MANe,yBAQfV,GAAa,GARE,4EAAH,qDAWhBM,GACD,GAAE,CAACH,IACJ,IAAMQ,EAAOV,EAASU,KACtB,OAAKA,EAGe,IAAhBA,EAAKC,QACA,gBAAKC,UAAU,YAAf,2CAGP,yBACGd,GACC,SAAC,KAAD,KAEA,eAAIc,UAAU,YAAd,SACGF,EAAKG,KAAI,SAAAC,GACR,IAAMC,EAAkBD,EAAME,aAAN,0CACeF,EAAME,cADrB,4DAIlBC,EAAiBH,EAAMI,KAAN,UAChBJ,EAAMI,MADU,oBAIjBC,EAAsBL,EAAMM,SAAN,UACrBN,EAAMO,WADe,oBAI5B,OACE,gBAAmBT,UAAU,YAA7B,WACE,gBACEU,IAAKP,EACLQ,IAAKT,EAAMI,KACXN,UAAU,gBAEZ,cAAGA,UAAU,YAAb,SAA0BK,KAC1B,cAAGL,UAAU,iBAAb,SAA+BO,MAPxBL,EAAMU,GAUlB,SAnCA,2CAwCV,C,mMClEDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAO,mCAEAC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCACUC,EADV,yBADE,cACnBE,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qDAOXC,EAAc,mCAAG,WAAMC,GAAN,uFACLN,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBK,EADpB,gCADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAc,mCAAG,WAAM9B,GAAN,uFACLuB,EAAAA,EAAAA,IAAA,gBAAmBvB,EAAnB,oBAAsCwB,IADjC,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKdvB,EAAe,mCAAG,WAAMJ,GAAN,uFACNuB,EAAAA,EAAAA,IAAA,iBACXvB,EADW,4BACgBwB,IAFV,cACvBE,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAgB,mCAAG,WAAM/B,GAAN,uFACPuB,EAAAA,EAAAA,IAAA,iBACXvB,EADW,4BACgBwB,IAFT,cACxBE,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiActorsSearch } from 'services/api';\nimport { ProgressBar } from 'react-loader-spinner';\nimport './Cast.css';\n\nexport default function Cast() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [castInfo, setCastInfo] = useState({});\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const findActors = async () => {\n      try {\n        setIsLoading(true);\n        const result = await apiActorsSearch(movieId);\n        setCastInfo(result);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    findActors();\n  }, [movieId]);\n  const cast = castInfo.cast;\n  if (!cast) {\n    return <div>No information</div>;\n  }\n  if (cast.lenght === 0) {\n    return <div className=\"castError\">No information about actors.</div>;\n  }\n  return (\n    <div>\n      {isLoading ? (\n        <ProgressBar />\n      ) : (\n        <ul className=\"actorList\">\n          {cast.map(actor => {\n            const finalActorPhoto = actor.profile_path\n              ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n              : `https://www.freeiconspng.com/uploads/no-image-icon-15.png`;\n\n            const finalActorName = actor.name\n              ? `${actor.name}`\n              : `No data available`;\n\n            const finalActorCharacter = actor.caracter\n              ? `${actor.character}`\n              : `No data available`;\n\n            return (\n              <li key={actor.id} className=\"actorWrap\">\n                <img\n                  src={finalActorPhoto}\n                  alt={actor.name}\n                  className=\"actorPhoto\"\n                />\n                <p className=\"actorName\">{finalActorName}</p>\n                <p className=\"actorCharacter\">{finalActorCharacter}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = `1a6be4acd703bdf91bdb7fd89ae97812`;\n\nexport const apiTrending = async () => {\n  const response = await axios.get(\n    `trending/movie/week?api_key=${API_KEY}&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const apiQuerySearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const apiMovieSearch = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const apiActorsSearch = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const apiReviewsSearch = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["Cast","useState","isLoading","setIsLoading","castInfo","setCastInfo","movieId","useParams","useEffect","findActors","apiActorsSearch","result","console","log","cast","lenght","className","map","actor","finalActorPhoto","profile_path","finalActorName","name","finalActorCharacter","caracter","character","src","alt","id","axios","API_KEY","apiTrending","response","data","apiQuerySearch","query","apiMovieSearch","apiReviewsSearch"],"sourceRoot":""}